

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 19 21:21:03 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  000C                     _PIR1bits	set	12
   218  001F                     _ADCON0bits	set	31
   219  0001                     _TMR0	set	1
   220  000B                     _INTCONbits	set	11
   221  0007                     _PORTC	set	7
   222  0005                     _PORTA	set	5
   223  0006                     _PORTB	set	6
   224  0008                     _PORTD	set	8
   225  001E                     _ADRESH	set	30
   226  005A                     _T0IF	set	90
   227  0066                     _ADIF	set	102
   228  008C                     _PIE1bits	set	140
   229  009F                     _ADCON1bits	set	159
   230  008F                     _OSCCONbits	set	143
   231  0081                     _OPTION_REGbits	set	129
   232  0088                     _TRISD	set	136
   233  0087                     _TRISC	set	135
   234  0086                     _TRISB	set	134
   235  0085                     _TRISA	set	133
   236  0189                     _ANSELH	set	393
   237  0188                     _ANSEL	set	392
   238                           
   239                           	psect	cinit
   240  0013                     start_initialization:	
   241                           ; #config settings
   242                           
   243  0013                     __initialization:
   244                           
   245                           ; Clear objects allocated to COMMON
   246  0013  01FD               	clrf	__pbssCOMMON& (0+127)
   247                           
   248                           ; Clear objects allocated to BANK0
   249  0014  1283               	bcf	3,5	;RP0=0, select bank0
   250  0015  1303               	bcf	3,6	;RP1=0, select bank0
   251  0016  01B0               	clrf	__pbssBANK0& (0+127)
   252  0017  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   253  0018  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   254  0019  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   255  001A  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   256  001B  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   257  001C  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   258  001D  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   259  001E  01B8               	clrf	(__pbssBANK0+8)& (0+127)
   260  001F                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  001F                     __end_of__initialization:
   264  001F  0183               	clrf	3
   265  0020  120A  118A  2A65   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bssCOMMON
   268  007D                     __pbssCOMMON:
   269  007D                     _selector:
   270  007D                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0030                     __pbssBANK0:
   274  0030                     _contador:
   275  0030                     	ds	2
   276  0032                     _cod:
   277  0032                     	ds	1
   278  0033                     _vector:
   279  0033                     	ds	6
   280                           
   281                           	psect	cstackCOMMON
   282  0070                     __pcstackCOMMON:
   283  0070                     ?_codificar_7seg:
   284  0070                     ??_codificar_7seg:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_multiplexado:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_setup:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_timer0:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_clk:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_setup_adc:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_setup_int:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_isr:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?___wmul:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ___wmul@multiplier:	
   315                           ; 2 bytes @ 0x0
   316                           
   317                           
   318                           ; 2 bytes @ 0x0
   319  0070                     	ds	2
   320  0072                     codificar_7seg@valor:
   321  0072                     ___wmul@multiplicand:	
   322                           ; 1 bytes @ 0x2
   323                           
   324                           
   325                           ; 2 bytes @ 0x2
   326  0072                     	ds	1
   327  0073                     ??_multiplexado:
   328                           
   329                           ; 1 bytes @ 0x3
   330  0073                     	ds	1
   331  0074                     ??___wmul:
   332  0074                     ___wmul@product:	
   333                           ; 1 bytes @ 0x4
   334                           
   335                           
   336                           ; 2 bytes @ 0x4
   337  0074                     	ds	2
   338  0076                     ?___awdiv:
   339  0076                     ___awdiv@divisor:	
   340                           ; 2 bytes @ 0x6
   341                           
   342                           
   343                           ; 2 bytes @ 0x6
   344  0076                     	ds	2
   345  0078                     ___awdiv@dividend:
   346                           
   347                           ; 2 bytes @ 0x8
   348  0078                     	ds	2
   349  007A                     ??___awdiv:
   350                           
   351                           ; 1 bytes @ 0xA
   352  007A                     	ds	1
   353  007B                     ??_separar:
   354  007B                     separar@temp:	
   355                           ; 1 bytes @ 0xB
   356                           
   357                           
   358                           ; 2 bytes @ 0xB
   359  007B                     	ds	2
   360                           
   361                           	psect	cstackBANK0
   362  0020                     __pcstackBANK0:
   363  0020                     ___awdiv@counter:
   364                           
   365                           ; 1 bytes @ 0x0
   366  0020                     	ds	1
   367  0021                     ___awdiv@sign:
   368                           
   369                           ; 1 bytes @ 0x1
   370  0021                     	ds	1
   371  0022                     ___awdiv@quotient:
   372                           
   373                           ; 2 bytes @ 0x2
   374  0022                     	ds	2
   375  0024                     ?_separar:
   376  0024                     separar@valor:	
   377                           ; 1 bytes @ 0x4
   378                           
   379                           
   380                           ; 2 bytes @ 0x4
   381  0024                     	ds	2
   382  0026                     separar@vector:
   383                           
   384                           ; 1 bytes @ 0x6
   385  0026                     	ds	1
   386  0027                     ??_isr:
   387                           
   388                           ; 1 bytes @ 0x7
   389  0027                     	ds	5
   390  002C                     isr@temp:
   391                           
   392                           ; 2 bytes @ 0xC
   393  002C                     	ds	2
   394  002E                     ??_setup:
   395  002E                     ??_timer0:	
   396                           ; 1 bytes @ 0xE
   397                           
   398  002E                     ??_clk:	
   399                           ; 1 bytes @ 0xE
   400                           
   401  002E                     ??_setup_adc:	
   402                           ; 1 bytes @ 0xE
   403                           
   404  002E                     ??_setup_int:	
   405                           ; 1 bytes @ 0xE
   406                           
   407                           
   408                           ; 1 bytes @ 0xE
   409  002E                     	ds	1
   410  002F                     ??_main:
   411                           
   412                           ; 1 bytes @ 0xF
   413  002F                     	ds	1
   414                           
   415                           	psect	maintext
   416  0265                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 242 in file "lab08_post_pgr.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : B00/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          0       1       0       0       0
   439 ;;      Totals:         0       1       0       0       0
   440 ;;Total ram usage:        1 bytes
   441 ;; Hardware stack levels required when called: 4
   442 ;; This function calls:
   443 ;;		_clk
   444 ;;		_setup
   445 ;;		_setup_adc
   446 ;;		_setup_int
   447 ;;		_timer0
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453  0265                     _main:	
   454                           ;psect for function _main
   455                           
   456  0265                     l1252:	
   457                           ;incstack = 0
   458                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   459                           
   460                           
   461                           ;lab08_post_pgr.c: 243:     setup();
   462  0265  120A  118A  22DE  120A  118A  	fcall	_setup
   463                           
   464                           ;lab08_post_pgr.c: 244:     clk();
   465  026A  120A  118A  2309  120A  118A  	fcall	_clk
   466                           
   467                           ;lab08_post_pgr.c: 245:     timer0();
   468  026F  120A  118A  22F1  120A  118A  	fcall	_timer0
   469                           
   470                           ;lab08_post_pgr.c: 246:     setup_adc();
   471  0274  120A  118A  22C8  120A  118A  	fcall	_setup_adc
   472  0279                     l1254:
   473                           
   474                           ;lab08_post_pgr.c: 247:     setup_int();
   475  0279  120A  118A  22FE  120A  118A  	fcall	_setup_int
   476  027E                     l1256:
   477                           
   478                           ;lab08_post_pgr.c: 248:     ADCON0bits.GO = 1;
   479  027E  1283               	bcf	3,5	;RP0=0, select bank0
   480  027F  1303               	bcf	3,6	;RP1=0, select bank0
   481  0280  149F               	bsf	31,1	;volatile
   482  0281                     l1258:
   483                           
   484                           ;lab08_post_pgr.c: 250:         if(ADCON0bits.GO == 0){
   485  0281  189F               	btfsc	31,1	;volatile
   486  0282  2A84               	goto	u431
   487  0283  2A85               	goto	u430
   488  0284                     u431:
   489  0284  2A81               	goto	l1258
   490  0285                     u430:
   491  0285                     l1260:
   492                           
   493                           ;lab08_post_pgr.c: 251:             if(ADCON0bits.CHS == 0)
   494  0285  0C1F               	rrf	31,w	;volatile
   495  0286  00AF               	movwf	??_main
   496  0287  0C2F               	rrf	??_main,w
   497  0288  390F               	andlw	15
   498  0289  3A00               	xorlw	0
   499  028A  1D03               	skipz
   500  028B  2A8D               	goto	u441
   501  028C  2A8E               	goto	u440
   502  028D                     u441:
   503  028D  2A93               	goto	l1264
   504  028E                     u440:
   505  028E                     l1262:
   506                           
   507                           ;lab08_post_pgr.c: 252:                 ADCON0bits.CHS = 1;
   508  028E  081F               	movf	31,w	;volatile
   509  028F  39C3               	andlw	-61
   510  0290  3804               	iorlw	4
   511  0291  009F               	movwf	31	;volatile
   512  0292  2A95               	goto	l1266
   513  0293                     l1264:
   514                           
   515                           ;lab08_post_pgr.c: 254:                 ADCON0bits.CHS = 0;
   516  0293  30C3               	movlw	-61
   517  0294  059F               	andwf	31,f	;volatile
   518  0295                     l1266:
   519                           
   520                           ;lab08_post_pgr.c: 256:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   521  0295  300F               	movlw	15
   522  0296  1283               	bcf	3,5	;RP0=0, select bank0
   523  0297  1303               	bcf	3,6	;RP1=0, select bank0
   524  0298  00AF               	movwf	??_main
   525  0299                     u457:
   526  0299  0BAF               	decfsz	??_main,f
   527  029A  2A99               	goto	u457
   528  029B  2A9C               	nop2
   529  029C                     l1268:
   530                           
   531                           ;lab08_post_pgr.c: 257:             ADCON0bits.GO = 1;
   532  029C  1283               	bcf	3,5	;RP0=0, select bank0
   533  029D  1303               	bcf	3,6	;RP1=0, select bank0
   534  029E  149F               	bsf	31,1	;volatile
   535  029F  2A81               	goto	l1258
   536  02A0  120A  118A  2810   	ljmp	start
   537  02A3                     __end_of_main:
   538                           
   539                           	psect	text1
   540  02F1                     __ptext1:	
   541 ;; *************** function _timer0 *****************
   542 ;; Defined at:
   543 ;;		line 181 in file "lab08_post_pgr.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 3
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571  02F1                     _timer0:	
   572                           ;psect for function _timer0
   573                           
   574  02F1                     l1202:	
   575                           ;incstack = 0
   576                           ; Regs used in _timer0: [wreg]
   577                           
   578                           
   579                           ;lab08_post_pgr.c: 182:     OPTION_REGbits.T0CS = 0;
   580  02F1  1683               	bsf	3,5	;RP0=1, select bank1
   581  02F2  1303               	bcf	3,6	;RP1=0, select bank1
   582  02F3  1281               	bcf	1,5	;volatile
   583                           
   584                           ;lab08_post_pgr.c: 183:     OPTION_REGbits.PSA = 0;
   585  02F4  1181               	bcf	1,3	;volatile
   586                           
   587                           ;lab08_post_pgr.c: 184:     OPTION_REGbits.PS2 = 1;
   588  02F5  1501               	bsf	1,2	;volatile
   589                           
   590                           ;lab08_post_pgr.c: 185:     OPTION_REGbits.PS1 = 1;
   591  02F6  1481               	bsf	1,1	;volatile
   592                           
   593                           ;lab08_post_pgr.c: 186:     OPTION_REGbits.PS0 = 1;
   594  02F7  1401               	bsf	1,0	;volatile
   595                           
   596                           ;lab08_post_pgr.c: 187:     INTCONbits.T0IF = 0;
   597  02F8  110B               	bcf	11,2	;volatile
   598  02F9                     l1204:
   599                           
   600                           ;lab08_post_pgr.c: 188:     TMR0 = 236;
   601  02F9  30EC               	movlw	236
   602  02FA  1283               	bcf	3,5	;RP0=0, select bank0
   603  02FB  1303               	bcf	3,6	;RP1=0, select bank0
   604  02FC  0081               	movwf	1	;volatile
   605  02FD                     l105:
   606  02FD  0008               	return
   607  02FE                     __end_of_timer0:
   608                           
   609                           	psect	text2
   610  02FE                     __ptext2:	
   611 ;; *************** function _setup_int *****************
   612 ;; Defined at:
   613 ;;		line 210 in file "lab08_post_pgr.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		None
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 3
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641  02FE                     _setup_int:	
   642                           ;psect for function _setup_int
   643                           
   644  02FE                     l1224:	
   645                           ;incstack = 0
   646                           ; Regs used in _setup_int: []
   647                           
   648                           
   649                           ;lab08_post_pgr.c: 211:     INTCONbits.GIE = 1;
   650  02FE  178B               	bsf	11,7	;volatile
   651                           
   652                           ;lab08_post_pgr.c: 212:     INTCONbits.PEIE = 1;
   653  02FF  170B               	bsf	11,6	;volatile
   654                           
   655                           ;lab08_post_pgr.c: 213:     INTCONbits.T0IE = 1;
   656  0300  168B               	bsf	11,5	;volatile
   657                           
   658                           ;lab08_post_pgr.c: 214:     PIE1bits.ADIE = 1;
   659  0301  1683               	bsf	3,5	;RP0=1, select bank1
   660  0302  1303               	bcf	3,6	;RP1=0, select bank1
   661  0303  170C               	bsf	12,6	;volatile
   662                           
   663                           ;lab08_post_pgr.c: 216:     INTCONbits.T0IF = 0;
   664  0304  110B               	bcf	11,2	;volatile
   665                           
   666                           ;lab08_post_pgr.c: 217:     PIR1bits.ADIF = 0;
   667  0305  1283               	bcf	3,5	;RP0=0, select bank0
   668  0306  1303               	bcf	3,6	;RP1=0, select bank0
   669  0307  130C               	bcf	12,6	;volatile
   670  0308                     l114:	
   671                           ;lab08_post_pgr.c: 218:     return;
   672                           
   673  0308  0008               	return
   674  0309                     __end_of_setup_int:
   675                           
   676                           	psect	text3
   677  02C8                     __ptext3:	
   678 ;; *************** function _setup_adc *****************
   679 ;; Defined at:
   680 ;;		line 198 in file "lab08_post_pgr.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          0       1       0       0       0
   697 ;;      Totals:         0       1       0       0       0
   698 ;;Total ram usage:        1 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 3
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708  02C8                     _setup_adc:	
   709                           ;psect for function _setup_adc
   710                           
   711  02C8                     l1214:	
   712                           ;incstack = 0
   713                           ; Regs used in _setup_adc: [wreg+status,2+status,0]
   714                           
   715                           
   716                           ;lab08_post_pgr.c: 199:     ADCON1bits.ADFM = 0;
   717  02C8  1683               	bsf	3,5	;RP0=1, select bank1
   718  02C9  1303               	bcf	3,6	;RP1=0, select bank1
   719  02CA  139F               	bcf	31,7	;volatile
   720                           
   721                           ;lab08_post_pgr.c: 200:     ADCON1bits.VCFG0 = 0;
   722  02CB  121F               	bcf	31,4	;volatile
   723                           
   724                           ;lab08_post_pgr.c: 201:     ADCON1bits.VCFG1 = 0;
   725  02CC  129F               	bcf	31,5	;volatile
   726  02CD                     l1216:
   727                           
   728                           ;lab08_post_pgr.c: 203:     ADCON0bits.ADCS = 0b01;
   729  02CD  1283               	bcf	3,5	;RP0=0, select bank0
   730  02CE  1303               	bcf	3,6	;RP1=0, select bank0
   731  02CF  081F               	movf	31,w	;volatile
   732  02D0  393F               	andlw	-193
   733  02D1  3840               	iorlw	64
   734  02D2  009F               	movwf	31	;volatile
   735                           
   736                           ;lab08_post_pgr.c: 204:     ADCON0bits.CHS = 0;
   737  02D3  30C3               	movlw	-61
   738  02D4  059F               	andwf	31,f	;volatile
   739  02D5                     l1218:
   740                           
   741                           ;lab08_post_pgr.c: 205:     ADCON0bits.ADON = 1;
   742  02D5  141F               	bsf	31,0	;volatile
   743  02D6                     l1220:
   744                           
   745                           ;lab08_post_pgr.c: 206:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   746  02D6  300F               	movlw	15
   747  02D7  1283               	bcf	3,5	;RP0=0, select bank0
   748  02D8  1303               	bcf	3,6	;RP1=0, select bank0
   749  02D9  00AE               	movwf	??_setup_adc
   750  02DA                     u467:
   751  02DA  0BAE               	decfsz	??_setup_adc,f
   752  02DB  2ADA               	goto	u467
   753  02DC  2ADD               	nop2
   754  02DD                     l111:
   755  02DD  0008               	return
   756  02DE                     __end_of_setup_adc:
   757                           
   758                           	psect	text4
   759  02DE                     __ptext4:	
   760 ;; *************** function _setup *****************
   761 ;; Defined at:
   762 ;;		line 153 in file "lab08_post_pgr.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, status,2
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; Hardware stack levels required when called: 3
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790  02DE                     _setup:	
   791                           ;psect for function _setup
   792                           
   793  02DE                     l1178:	
   794                           ;incstack = 0
   795                           ; Regs used in _setup: [wreg+status,2]
   796                           
   797                           
   798                           ;lab08_post_pgr.c: 154:     ANSEL = 0b00000011;
   799  02DE  3003               	movlw	3
   800  02DF  1683               	bsf	3,5	;RP0=1, select bank3
   801  02E0  1703               	bsf	3,6	;RP1=1, select bank3
   802  02E1  0088               	movwf	8	;volatile
   803  02E2                     l1180:
   804                           
   805                           ;lab08_post_pgr.c: 155:     ANSELH = 0;
   806  02E2  0189               	clrf	9	;volatile
   807  02E3                     l1182:
   808                           
   809                           ;lab08_post_pgr.c: 157:     TRISA = 0b00000011;
   810  02E3  3003               	movlw	3
   811  02E4  1683               	bsf	3,5	;RP0=1, select bank1
   812  02E5  1303               	bcf	3,6	;RP1=0, select bank1
   813  02E6  0085               	movwf	5	;volatile
   814                           
   815                           ;lab08_post_pgr.c: 158:     TRISB = 0;
   816  02E7  0186               	clrf	6	;volatile
   817                           
   818                           ;lab08_post_pgr.c: 159:     TRISC = 0;
   819  02E8  0187               	clrf	7	;volatile
   820                           
   821                           ;lab08_post_pgr.c: 160:     TRISD = 0;
   822  02E9  0188               	clrf	8	;volatile
   823                           
   824                           ;lab08_post_pgr.c: 162:     PORTA = 0;
   825  02EA  1283               	bcf	3,5	;RP0=0, select bank0
   826  02EB  1303               	bcf	3,6	;RP1=0, select bank0
   827  02EC  0185               	clrf	5	;volatile
   828                           
   829                           ;lab08_post_pgr.c: 163:     PORTB = 0;
   830  02ED  0186               	clrf	6	;volatile
   831                           
   832                           ;lab08_post_pgr.c: 164:     PORTD = 0;
   833  02EE  0188               	clrf	8	;volatile
   834                           
   835                           ;lab08_post_pgr.c: 165:     PORTC = 0;
   836  02EF  0187               	clrf	7	;volatile
   837  02F0                     l99:
   838  02F0  0008               	return
   839  02F1                     __end_of_setup:
   840                           
   841                           	psect	text5
   842  0309                     __ptext5:	
   843 ;; *************** function _clk *****************
   844 ;; Defined at:
   845 ;;		line 192 in file "lab08_post_pgr.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 3
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873  0309                     _clk:	
   874                           ;psect for function _clk
   875                           
   876  0309                     l1208:	
   877                           ;incstack = 0
   878                           ; Regs used in _clk: [wreg+status,2+status,0]
   879                           
   880                           
   881                           ;lab08_post_pgr.c: 193:     OSCCONbits.IRCF = 0b0110;
   882  0309  1683               	bsf	3,5	;RP0=1, select bank1
   883  030A  1303               	bcf	3,6	;RP1=0, select bank1
   884  030B  080F               	movf	15,w	;volatile
   885  030C  398F               	andlw	-113
   886  030D  3860               	iorlw	96
   887  030E  008F               	movwf	15	;volatile
   888  030F                     l1210:
   889                           
   890                           ;lab08_post_pgr.c: 194:     OSCCONbits.SCS = 1;
   891  030F  140F               	bsf	15,0	;volatile
   892  0310                     l108:
   893  0310  0008               	return
   894  0311                     __end_of_clk:
   895                           
   896                           	psect	text6
   897  01C1                     __ptext6:	
   898 ;; *************** function _isr *****************
   899 ;; Defined at:
   900 ;;		line 222 in file "lab08_post_pgr.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  temp            2   12[BANK0 ] int 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0       2       0       0       0
   916 ;;      Temps:          0       5       0       0       0
   917 ;;      Totals:         0       7       0       0       0
   918 ;;Total ram usage:        7 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 2
   921 ;; This function calls:
   922 ;;		___awdiv
   923 ;;		___wmul
   924 ;;		_multiplexado
   925 ;;		_separar
   926 ;; This function is called by:
   927 ;;		Interrupt level 1
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931  01C1                     _isr:	
   932                           ;psect for function _isr
   933                           
   934  01C1                     i1l1226:
   935  01C1                     i1l1228:
   936                           
   937                           ;lab08_post_pgr.c: 224:     if(ADIF){
   938  01C1  1F0C               	btfss	12,6	;volatile
   939  01C2  29C4               	goto	u40_21
   940  01C3  29C5               	goto	u40_20
   941  01C4                     u40_21:
   942  01C4  2A02               	goto	i1l1240
   943  01C5                     u40_20:
   944  01C5                     i1l1230:
   945                           
   946                           ;lab08_post_pgr.c: 225:         PIR1bits.ADIF = 0;
   947  01C5  130C               	bcf	12,6	;volatile
   948  01C6                     i1l1232:
   949                           
   950                           ;lab08_post_pgr.c: 226:         if(ADCON0bits.CHS == 0)
   951  01C6  0C1F               	rrf	31,w	;volatile
   952  01C7  00A7               	movwf	??_isr
   953  01C8  0C27               	rrf	??_isr,w
   954  01C9  390F               	andlw	15
   955  01CA  3A00               	xorlw	0
   956  01CB  1D03               	skipz
   957  01CC  29CE               	goto	u41_21
   958  01CD  29CF               	goto	u41_20
   959  01CE                     u41_21:
   960  01CE  29D2               	goto	i1l1236
   961  01CF                     u41_20:
   962  01CF                     i1l1234:
   963                           
   964                           ;lab08_post_pgr.c: 227:             PORTC = ADRESH;
   965  01CF  081E               	movf	30,w	;volatile
   966  01D0  0087               	movwf	7	;volatile
   967  01D1  2A02               	goto	i1l1240
   968  01D2                     i1l1236:
   969                           
   970                           ;lab08_post_pgr.c: 229:             temp = 100*ADRESH/51;
   971  01D2  3033               	movlw	51
   972  01D3  00F6               	movwf	___awdiv@divisor
   973  01D4  3000               	movlw	0
   974  01D5  00F7               	movwf	___awdiv@divisor+1
   975  01D6  081E               	movf	30,w	;volatile
   976  01D7  00A7               	movwf	??_isr
   977  01D8  01A8               	clrf	??_isr+1
   978  01D9  0827               	movf	??_isr,w
   979  01DA  00F0               	movwf	___wmul@multiplier
   980  01DB  0828               	movf	??_isr+1,w
   981  01DC  00F1               	movwf	___wmul@multiplier+1
   982  01DD  3064               	movlw	100
   983  01DE  00F2               	movwf	___wmul@multiplicand
   984  01DF  3000               	movlw	0
   985  01E0  00F3               	movwf	___wmul@multiplicand+1
   986  01E1  120A  118A  22A3  120A  118A  	fcall	___wmul
   987  01E6  0871               	movf	?___wmul+1,w
   988  01E7  00F9               	movwf	___awdiv@dividend+1
   989  01E8  0870               	movf	?___wmul,w
   990  01E9  00F8               	movwf	___awdiv@dividend
   991  01EA  120A  118A  2158  120A  118A  	fcall	___awdiv
   992  01EF  0877               	movf	?___awdiv+1,w
   993  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   994  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   995  01F2  00AD               	movwf	isr@temp+1
   996  01F3  0876               	movf	?___awdiv,w
   997  01F4  00AC               	movwf	isr@temp
   998  01F5                     i1l1238:
   999                           
  1000                           ;lab08_post_pgr.c: 230:             separar(temp, vector);
  1001  01F5  082D               	movf	isr@temp+1,w
  1002  01F6  00A5               	movwf	separar@valor+1
  1003  01F7  082C               	movf	isr@temp,w
  1004  01F8  00A4               	movwf	separar@valor
  1005  01F9  3033               	movlw	(low (_vector| 0))& (0+255)
  1006  01FA  00A7               	movwf	??_isr
  1007  01FB  0827               	movf	??_isr,w
  1008  01FC  00A6               	movwf	separar@vector
  1009  01FD  120A  118A  20E9  120A  118A  	fcall	_separar
  1010  0202                     i1l1240:
  1011                           
  1012                           ;lab08_post_pgr.c: 233:     if(T0IF){
  1013  0202  1D0B               	btfss	11,2	;volatile
  1014  0203  2A05               	goto	u42_21
  1015  0204  2A06               	goto	u42_20
  1016  0205                     u42_21:
  1017  0205  2A11               	goto	i1l123
  1018  0206                     u42_20:
  1019  0206                     i1l1242:
  1020                           
  1021                           ;lab08_post_pgr.c: 234:         TMR0 = 236;
  1022  0206  30EC               	movlw	236
  1023  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0209  0081               	movwf	1	;volatile
  1026  020A                     i1l1244:
  1027                           
  1028                           ;lab08_post_pgr.c: 235:         PORTB = 0;
  1029  020A  0186               	clrf	6	;volatile
  1030  020B                     i1l1246:
  1031                           
  1032                           ;lab08_post_pgr.c: 236:         multiplexado();
  1033  020B  120A  118A  221C  120A  118A  	fcall	_multiplexado
  1034  0210                     i1l1248:
  1035                           
  1036                           ;lab08_post_pgr.c: 237:         T0IF = 0;
  1037  0210  110B               	bcf	11,2	;volatile
  1038  0211                     i1l123:
  1039  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0213  082B               	movf	??_isr+4,w
  1042  0214  008A               	movwf	10
  1043  0215  082A               	movf	??_isr+3,w
  1044  0216  0084               	movwf	4
  1045  0217  0E29               	swapf	??_isr+2,w
  1046  0218  0083               	movwf	3
  1047  0219  0EFE               	swapf	btemp,f
  1048  021A  0E7E               	swapf	btemp,w
  1049  021B  0009               	retfie
  1050  021C                     __end_of_isr:
  1051                           
  1052                           	psect	intentry
  1053  0004                     __pintentry:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1056                           
  1057  0004                     interrupt_function:
  1058  007E                     saved_w	set	btemp
  1059  0004  00FE               	movwf	btemp
  1060  0005  0E03               	swapf	3,w
  1061  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0008  00A9               	movwf	??_isr+2
  1064  0009  0804               	movf	4,w
  1065  000A  00AA               	movwf	??_isr+3
  1066  000B  080A               	movf	10,w
  1067  000C  00AB               	movwf	??_isr+4
  1068  000D  120A  118A  29C1   	ljmp	_isr
  1069                           
  1070                           	psect	text7
  1071  00E9                     __ptext7:	
  1072 ;; *************** function _separar *****************
  1073 ;; Defined at:
  1074 ;;		line 169 in file "lab08_post_pgr.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  valor           2    4[BANK0 ] int 
  1077 ;;  vector          1    6[BANK0 ] PTR int 
  1078 ;;		 -> vector(6), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  temp            2   11[COMMON] int 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       3       0       0       0
  1091 ;;      Locals:         2       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0
  1093 ;;      Totals:         2       3       0       0       0
  1094 ;;Total ram usage:        5 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 1
  1097 ;; This function calls:
  1098 ;;		___awdiv
  1099 ;;		___wmul
  1100 ;; This function is called by:
  1101 ;;		_isr
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105  00E9                     _separar:	
  1106                           ;psect for function _separar
  1107                           
  1108  00E9                     i1l1186:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _separar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1111                           
  1112  00E9                     i1l1188:
  1113                           
  1114                           ;lab08_post_pgr.c: 172:     temp = valor;
  1115  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1116  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1117  00EB  0825               	movf	separar@valor+1,w
  1118  00EC  00FC               	movwf	separar@temp+1
  1119  00ED  0824               	movf	separar@valor,w
  1120  00EE  00FB               	movwf	separar@temp
  1121  00EF                     i1l1190:
  1122                           
  1123                           ;lab08_post_pgr.c: 173:     vector[2] = temp/100;
  1124  00EF  3064               	movlw	100
  1125  00F0  00F6               	movwf	___awdiv@divisor
  1126  00F1  3000               	movlw	0
  1127  00F2  00F7               	movwf	___awdiv@divisor+1
  1128  00F3  087C               	movf	separar@temp+1,w
  1129  00F4  00F9               	movwf	___awdiv@dividend+1
  1130  00F5  087B               	movf	separar@temp,w
  1131  00F6  00F8               	movwf	___awdiv@dividend
  1132  00F7  120A  118A  2158  120A  118A  	fcall	___awdiv
  1133  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1134  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1135  00FE  0826               	movf	separar@vector,w
  1136  00FF  3E04               	addlw	4
  1137  0100  0084               	movwf	4
  1138  0101  0876               	movf	?___awdiv,w
  1139  0102  1383               	bcf	3,7	;select IRP bank0
  1140  0103  0080               	movwf	0
  1141  0104  0A84               	incf	4,f
  1142  0105  0877               	movf	?___awdiv+1,w
  1143  0106  0080               	movwf	0
  1144  0107                     i1l1192:
  1145                           
  1146                           ;lab08_post_pgr.c: 174:     temp-= vector[2]*100;
  1147  0107  0826               	movf	separar@vector,w
  1148  0108  3E04               	addlw	4
  1149  0109  0084               	movwf	4
  1150  010A  0800               	movf	0,w
  1151  010B  00F0               	movwf	___wmul@multiplier
  1152  010C  0A84               	incf	4,f
  1153  010D  0800               	movf	0,w
  1154  010E  00F1               	movwf	___wmul@multiplier+1
  1155  010F  3064               	movlw	100
  1156  0110  00F2               	movwf	___wmul@multiplicand
  1157  0111  3000               	movlw	0
  1158  0112  00F3               	movwf	___wmul@multiplicand+1
  1159  0113  120A  118A  22A3  120A  118A  	fcall	___wmul
  1160  0118  0870               	movf	?___wmul,w
  1161  0119  02FB               	subwf	separar@temp,f
  1162  011A  0871               	movf	?___wmul+1,w
  1163  011B  1C03               	skipc
  1164  011C  03FC               	decf	separar@temp+1,f
  1165  011D  02FC               	subwf	separar@temp+1,f
  1166  011E                     i1l1194:
  1167                           
  1168                           ;lab08_post_pgr.c: 175:     vector[1] = temp/10;
  1169  011E  300A               	movlw	10
  1170  011F  00F6               	movwf	___awdiv@divisor
  1171  0120  3000               	movlw	0
  1172  0121  00F7               	movwf	___awdiv@divisor+1
  1173  0122  087C               	movf	separar@temp+1,w
  1174  0123  00F9               	movwf	___awdiv@dividend+1
  1175  0124  087B               	movf	separar@temp,w
  1176  0125  00F8               	movwf	___awdiv@dividend
  1177  0126  120A  118A  2158  120A  118A  	fcall	___awdiv
  1178  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1179  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1180  012D  0826               	movf	separar@vector,w
  1181  012E  3E02               	addlw	2
  1182  012F  0084               	movwf	4
  1183  0130  0876               	movf	?___awdiv,w
  1184  0131  1383               	bcf	3,7	;select IRP bank0
  1185  0132  0080               	movwf	0
  1186  0133  0A84               	incf	4,f
  1187  0134  0877               	movf	?___awdiv+1,w
  1188  0135  0080               	movwf	0
  1189  0136                     i1l1196:
  1190                           
  1191                           ;lab08_post_pgr.c: 176:     temp-= vector[1]*10;
  1192  0136  0826               	movf	separar@vector,w
  1193  0137  3E02               	addlw	2
  1194  0138  0084               	movwf	4
  1195  0139  0800               	movf	0,w
  1196  013A  00F0               	movwf	___wmul@multiplier
  1197  013B  0A84               	incf	4,f
  1198  013C  0800               	movf	0,w
  1199  013D  00F1               	movwf	___wmul@multiplier+1
  1200  013E  300A               	movlw	10
  1201  013F  00F2               	movwf	___wmul@multiplicand
  1202  0140  3000               	movlw	0
  1203  0141  00F3               	movwf	___wmul@multiplicand+1
  1204  0142  120A  118A  22A3  120A  118A  	fcall	___wmul
  1205  0147  0870               	movf	?___wmul,w
  1206  0148  02FB               	subwf	separar@temp,f
  1207  0149  0871               	movf	?___wmul+1,w
  1208  014A  1C03               	skipc
  1209  014B  03FC               	decf	separar@temp+1,f
  1210  014C  02FC               	subwf	separar@temp+1,f
  1211  014D                     i1l1198:
  1212                           
  1213                           ;lab08_post_pgr.c: 177:     vector[0] = temp;
  1214  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1215  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1216  014F  0826               	movf	separar@vector,w
  1217  0150  0084               	movwf	4
  1218  0151  087B               	movf	separar@temp,w
  1219  0152  1383               	bcf	3,7	;select IRP bank0
  1220  0153  0080               	movwf	0
  1221  0154  0A84               	incf	4,f
  1222  0155  087C               	movf	separar@temp+1,w
  1223  0156  0080               	movwf	0
  1224  0157                     i1l102:
  1225  0157  0008               	return
  1226  0158                     __end_of_separar:
  1227                           
  1228                           	psect	text8
  1229  02A3                     __ptext8:	
  1230 ;; *************** function ___wmul *****************
  1231 ;; Defined at:
  1232 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  multiplier      2    0[COMMON] unsigned int 
  1235 ;;  multiplicand    2    2[COMMON] unsigned int 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  product         2    4[COMMON] unsigned int 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  2    0[COMMON] unsigned int 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         4       0       0       0       0
  1248 ;;      Locals:         2       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         6       0       0       0       0
  1251 ;;Total ram usage:        6 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_separar
  1257 ;;		_isr
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261  02A3                     ___wmul:	
  1262                           ;psect for function ___wmul
  1263                           
  1264  02A3                     i1l1092:	
  1265                           ;incstack = 0
  1266                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1267                           
  1268  02A3  01F4               	clrf	___wmul@product
  1269  02A4  01F5               	clrf	___wmul@product+1
  1270  02A5                     i1l1094:
  1271  02A5  1C70               	btfss	___wmul@multiplier,0
  1272  02A6  2AA8               	goto	u24_21
  1273  02A7  2AA9               	goto	u24_20
  1274  02A8                     u24_21:
  1275  02A8  2AAF               	goto	i1l220
  1276  02A9                     u24_20:
  1277  02A9                     i1l1096:
  1278  02A9  0872               	movf	___wmul@multiplicand,w
  1279  02AA  07F4               	addwf	___wmul@product,f
  1280  02AB  1803               	skipnc
  1281  02AC  0AF5               	incf	___wmul@product+1,f
  1282  02AD  0873               	movf	___wmul@multiplicand+1,w
  1283  02AE  07F5               	addwf	___wmul@product+1,f
  1284  02AF                     i1l220:
  1285  02AF  3001               	movlw	1
  1286  02B0                     u25_25:
  1287  02B0  1003               	clrc
  1288  02B1  0DF2               	rlf	___wmul@multiplicand,f
  1289  02B2  0DF3               	rlf	___wmul@multiplicand+1,f
  1290  02B3  3EFF               	addlw	-1
  1291  02B4  1D03               	skipz
  1292  02B5  2AB0               	goto	u25_25
  1293  02B6                     i1l1098:
  1294  02B6  3001               	movlw	1
  1295  02B7                     u26_25:
  1296  02B7  1003               	clrc
  1297  02B8  0CF1               	rrf	___wmul@multiplier+1,f
  1298  02B9  0CF0               	rrf	___wmul@multiplier,f
  1299  02BA  3EFF               	addlw	-1
  1300  02BB  1D03               	skipz
  1301  02BC  2AB7               	goto	u26_25
  1302  02BD                     i1l1100:
  1303  02BD  0870               	movf	___wmul@multiplier,w
  1304  02BE  0471               	iorwf	___wmul@multiplier+1,w
  1305  02BF  1D03               	btfss	3,2
  1306  02C0  2AC2               	goto	u27_21
  1307  02C1  2AC3               	goto	u27_20
  1308  02C2                     u27_21:
  1309  02C2  2AA5               	goto	i1l1094
  1310  02C3                     u27_20:
  1311  02C3                     i1l1102:
  1312  02C3  0875               	movf	___wmul@product+1,w
  1313  02C4  00F1               	movwf	?___wmul+1
  1314  02C5  0874               	movf	___wmul@product,w
  1315  02C6  00F0               	movwf	?___wmul
  1316  02C7                     i1l222:
  1317  02C7  0008               	return
  1318  02C8                     __end_of___wmul:
  1319                           
  1320                           	psect	text9
  1321  0158                     __ptext9:	
  1322 ;; *************** function ___awdiv *****************
  1323 ;; Defined at:
  1324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  divisor         2    6[COMMON] int 
  1327 ;;  dividend        2    8[COMMON] int 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  quotient        2    2[BANK0 ] int 
  1330 ;;  sign            1    1[BANK0 ] unsigned char 
  1331 ;;  counter         1    0[BANK0 ] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  2    6[COMMON] int 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         4       0       0       0       0
  1342 ;;      Locals:         0       4       0       0       0
  1343 ;;      Temps:          1       0       0       0       0
  1344 ;;      Totals:         5       4       0       0       0
  1345 ;;Total ram usage:        9 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_separar
  1351 ;;		_isr
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355  0158                     ___awdiv:	
  1356                           ;psect for function ___awdiv
  1357                           
  1358  0158                     i1l1106:	
  1359                           ;incstack = 0
  1360                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1361                           
  1362  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1364  015A  01A1               	clrf	___awdiv@sign
  1365  015B                     i1l1108:
  1366  015B  1FF7               	btfss	___awdiv@divisor+1,7
  1367  015C  295E               	goto	u28_21
  1368  015D  295F               	goto	u28_20
  1369  015E                     u28_21:
  1370  015E  2966               	goto	i1l1114
  1371  015F                     u28_20:
  1372  015F                     i1l1110:
  1373  015F  09F6               	comf	___awdiv@divisor,f
  1374  0160  09F7               	comf	___awdiv@divisor+1,f
  1375  0161  0AF6               	incf	___awdiv@divisor,f
  1376  0162  1903               	skipnz
  1377  0163  0AF7               	incf	___awdiv@divisor+1,f
  1378  0164                     i1l1112:
  1379  0164  01A1               	clrf	___awdiv@sign
  1380  0165  0AA1               	incf	___awdiv@sign,f
  1381  0166                     i1l1114:
  1382  0166  1FF9               	btfss	___awdiv@dividend+1,7
  1383  0167  2969               	goto	u29_21
  1384  0168  296A               	goto	u29_20
  1385  0169                     u29_21:
  1386  0169  2973               	goto	i1l1120
  1387  016A                     u29_20:
  1388  016A                     i1l1116:
  1389  016A  09F8               	comf	___awdiv@dividend,f
  1390  016B  09F9               	comf	___awdiv@dividend+1,f
  1391  016C  0AF8               	incf	___awdiv@dividend,f
  1392  016D  1903               	skipnz
  1393  016E  0AF9               	incf	___awdiv@dividend+1,f
  1394  016F                     i1l1118:
  1395  016F  3001               	movlw	1
  1396  0170  00FA               	movwf	??___awdiv
  1397  0171  087A               	movf	??___awdiv,w
  1398  0172  06A1               	xorwf	___awdiv@sign,f
  1399  0173                     i1l1120:
  1400  0173  01A2               	clrf	___awdiv@quotient
  1401  0174  01A3               	clrf	___awdiv@quotient+1
  1402  0175                     i1l1122:
  1403  0175  0876               	movf	___awdiv@divisor,w
  1404  0176  0477               	iorwf	___awdiv@divisor+1,w
  1405  0177  1903               	btfsc	3,2
  1406  0178  297A               	goto	u30_21
  1407  0179  297B               	goto	u30_20
  1408  017A                     u30_21:
  1409  017A  29B2               	goto	i1l1142
  1410  017B                     u30_20:
  1411  017B                     i1l1124:
  1412  017B  01A0               	clrf	___awdiv@counter
  1413  017C  0AA0               	incf	___awdiv@counter,f
  1414  017D  2989               	goto	i1l1130
  1415  017E                     i1l1126:
  1416  017E  3001               	movlw	1
  1417  017F                     u31_25:
  1418  017F  1003               	clrc
  1419  0180  0DF6               	rlf	___awdiv@divisor,f
  1420  0181  0DF7               	rlf	___awdiv@divisor+1,f
  1421  0182  3EFF               	addlw	-1
  1422  0183  1D03               	skipz
  1423  0184  297F               	goto	u31_25
  1424  0185                     i1l1128:
  1425  0185  3001               	movlw	1
  1426  0186  00FA               	movwf	??___awdiv
  1427  0187  087A               	movf	??___awdiv,w
  1428  0188  07A0               	addwf	___awdiv@counter,f
  1429  0189                     i1l1130:
  1430  0189  1FF7               	btfss	___awdiv@divisor+1,7
  1431  018A  298C               	goto	u32_21
  1432  018B  298D               	goto	u32_20
  1433  018C                     u32_21:
  1434  018C  297E               	goto	i1l1126
  1435  018D                     u32_20:
  1436  018D                     i1l1132:
  1437  018D  3001               	movlw	1
  1438  018E                     u33_25:
  1439  018E  1003               	clrc
  1440  018F  0DA2               	rlf	___awdiv@quotient,f
  1441  0190  0DA3               	rlf	___awdiv@quotient+1,f
  1442  0191  3EFF               	addlw	-1
  1443  0192  1D03               	skipz
  1444  0193  298E               	goto	u33_25
  1445  0194  0877               	movf	___awdiv@divisor+1,w
  1446  0195  0279               	subwf	___awdiv@dividend+1,w
  1447  0196  1D03               	skipz
  1448  0197  299A               	goto	u34_25
  1449  0198  0876               	movf	___awdiv@divisor,w
  1450  0199  0278               	subwf	___awdiv@dividend,w
  1451  019A                     u34_25:
  1452  019A  1C03               	skipc
  1453  019B  299D               	goto	u34_21
  1454  019C  299E               	goto	u34_20
  1455  019D                     u34_21:
  1456  019D  29A5               	goto	i1l1138
  1457  019E                     u34_20:
  1458  019E                     i1l1134:
  1459  019E  0876               	movf	___awdiv@divisor,w
  1460  019F  02F8               	subwf	___awdiv@dividend,f
  1461  01A0  0877               	movf	___awdiv@divisor+1,w
  1462  01A1  1C03               	skipc
  1463  01A2  03F9               	decf	___awdiv@dividend+1,f
  1464  01A3  02F9               	subwf	___awdiv@dividend+1,f
  1465  01A4                     i1l1136:
  1466  01A4  1422               	bsf	___awdiv@quotient,0
  1467  01A5                     i1l1138:
  1468  01A5  3001               	movlw	1
  1469  01A6                     u35_25:
  1470  01A6  1003               	clrc
  1471  01A7  0CF7               	rrf	___awdiv@divisor+1,f
  1472  01A8  0CF6               	rrf	___awdiv@divisor,f
  1473  01A9  3EFF               	addlw	-1
  1474  01AA  1D03               	skipz
  1475  01AB  29A6               	goto	u35_25
  1476  01AC                     i1l1140:
  1477  01AC  3001               	movlw	1
  1478  01AD  02A0               	subwf	___awdiv@counter,f
  1479  01AE  1D03               	btfss	3,2
  1480  01AF  29B1               	goto	u36_21
  1481  01B0  29B2               	goto	u36_20
  1482  01B1                     u36_21:
  1483  01B1  298D               	goto	i1l1132
  1484  01B2                     u36_20:
  1485  01B2                     i1l1142:
  1486  01B2  0821               	movf	___awdiv@sign,w
  1487  01B3  1903               	btfsc	3,2
  1488  01B4  29B6               	goto	u37_21
  1489  01B5  29B7               	goto	u37_20
  1490  01B6                     u37_21:
  1491  01B6  29BC               	goto	i1l1146
  1492  01B7                     u37_20:
  1493  01B7                     i1l1144:
  1494  01B7  09A2               	comf	___awdiv@quotient,f
  1495  01B8  09A3               	comf	___awdiv@quotient+1,f
  1496  01B9  0AA2               	incf	___awdiv@quotient,f
  1497  01BA  1903               	skipnz
  1498  01BB  0AA3               	incf	___awdiv@quotient+1,f
  1499  01BC                     i1l1146:
  1500  01BC  0823               	movf	___awdiv@quotient+1,w
  1501  01BD  00F7               	movwf	?___awdiv+1
  1502  01BE  0822               	movf	___awdiv@quotient,w
  1503  01BF  00F6               	movwf	?___awdiv
  1504  01C0                     i1l373:
  1505  01C0  0008               	return
  1506  01C1                     __end_of___awdiv:
  1507                           
  1508                           	psect	text10
  1509  021C                     __ptext10:	
  1510 ;; *************** function _multiplexado *****************
  1511 ;; Defined at:
  1512 ;;		line 119 in file "lab08_post_pgr.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0
  1528 ;;      Temps:          2       0       0       0       0
  1529 ;;      Totals:         2       0       0       0       0
  1530 ;;Total ram usage:        2 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 1
  1533 ;; This function calls:
  1534 ;;		_codificar_7seg
  1535 ;; This function is called by:
  1536 ;;		_isr
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540  021C                     _multiplexado:	
  1541                           ;psect for function _multiplexado
  1542                           
  1543  021C                     i1l1150:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _multiplexado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1546                           
  1547                           
  1548                           ;lab08_post_pgr.c: 120:     if(selector < 4)
  1549  021C  3004               	movlw	4
  1550  021D  027D               	subwf	_selector,w
  1551  021E  1803               	skipnc
  1552  021F  2A21               	goto	u38_21
  1553  0220  2A22               	goto	u38_20
  1554  0221                     u38_21:
  1555  0221  2A2F               	goto	i1l86
  1556  0222                     u38_20:
  1557  0222                     i1l1152:
  1558                           
  1559                           ;lab08_post_pgr.c: 121:     {;lab08_post_pgr.c: 122:         if(selector == 0)
  1560  0222  087D               	movf	_selector,w
  1561  0223  1D03               	btfss	3,2
  1562  0224  2A26               	goto	u39_21
  1563  0225  2A27               	goto	u39_20
  1564  0226                     u39_21:
  1565  0226  2A2C               	goto	i1l1156
  1566  0227                     u39_20:
  1567  0227                     i1l1154:
  1568                           
  1569                           ;lab08_post_pgr.c: 123:             selector++;
  1570  0227  3001               	movlw	1
  1571  0228  00F3               	movwf	??_multiplexado
  1572  0229  0873               	movf	??_multiplexado,w
  1573  022A  07FD               	addwf	_selector,f
  1574  022B  2A51               	goto	i1l1172
  1575  022C                     i1l1156:
  1576                           
  1577                           ;lab08_post_pgr.c: 125:             selector *= 2;
  1578  022C  1003               	clrc
  1579  022D  0DFD               	rlf	_selector,f
  1580  022E  2A51               	goto	i1l1172
  1581  022F                     i1l86:	
  1582                           ;lab08_post_pgr.c: 127:     else
  1583                           
  1584                           
  1585                           ;lab08_post_pgr.c: 128:         selector = 1;
  1586  022F  01FD               	clrf	_selector
  1587  0230  0AFD               	incf	_selector,f
  1588  0231  2A51               	goto	i1l1172
  1589  0232                     i1l1158:
  1590                           
  1591                           ;lab08_post_pgr.c: 132:             codificar_7seg(vector[0]);
  1592  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0234  0833               	movf	_vector,w
  1595  0235  120A  118A  2023  120A  118A  	fcall	_codificar_7seg
  1596  023A                     i1l1160:
  1597                           
  1598                           ;lab08_post_pgr.c: 133:             PORTB = selector;
  1599  023A  087D               	movf	_selector,w
  1600  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1601  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1602  023D  0086               	movwf	6	;volatile
  1603                           
  1604                           ;lab08_post_pgr.c: 134:             break;
  1605  023E  2A64               	goto	i1l96
  1606  023F                     i1l1162:
  1607                           
  1608                           ;lab08_post_pgr.c: 137:             codificar_7seg(vector[1]);
  1609  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0241  0835               	movf	_vector+2,w
  1612  0242  120A  118A  2023  120A  118A  	fcall	_codificar_7seg
  1613  0247  2A3A               	goto	i1l1160
  1614  0248                     i1l1166:
  1615                           
  1616                           ;lab08_post_pgr.c: 142:             codificar_7seg(vector[2]);
  1617  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1619  024A  0837               	movf	_vector+4,w
  1620  024B  120A  118A  2023  120A  118A  	fcall	_codificar_7seg
  1621  0250  2A3A               	goto	i1l1160
  1622  0251                     i1l1172:
  1623  0251  087D               	movf	_selector,w
  1624  0252  00F3               	movwf	??_multiplexado
  1625  0253  01F4               	clrf	??_multiplexado+1
  1626                           
  1627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1628                           ; Switch size 1, requested type "simple"
  1629                           ; Number of cases is 1, Range of values is 0 to 0
  1630                           ; switch strategies available:
  1631                           ; Name         Instructions Cycles
  1632                           ; simple_byte            4     3 (average)
  1633                           ; direct_byte           11     8 (fixed)
  1634                           ; jumptable            260     6 (fixed)
  1635                           ;	Chosen strategy is simple_byte
  1636  0254  0874               	movf	??_multiplexado+1,w
  1637  0255  3A00               	xorlw	0	; case 0
  1638  0256  1903               	skipnz
  1639  0257  2A59               	goto	i1l1330
  1640  0258  2A64               	goto	i1l96
  1641  0259                     i1l1330:
  1642                           
  1643                           ; Switch size 1, requested type "simple"
  1644                           ; Number of cases is 3, Range of values is 1 to 4
  1645                           ; switch strategies available:
  1646                           ; Name         Instructions Cycles
  1647                           ; simple_byte           10     6 (average)
  1648                           ; direct_byte           23    11 (fixed)
  1649                           ; jumptable            263     9 (fixed)
  1650                           ;	Chosen strategy is simple_byte
  1651  0259  0873               	movf	??_multiplexado,w
  1652  025A  3A01               	xorlw	1	; case 1
  1653  025B  1903               	skipnz
  1654  025C  2A32               	goto	i1l1158
  1655  025D  3A03               	xorlw	3	; case 2
  1656  025E  1903               	skipnz
  1657  025F  2A3F               	goto	i1l1162
  1658  0260  3A06               	xorlw	6	; case 4
  1659  0261  1903               	skipnz
  1660  0262  2A48               	goto	i1l1166
  1661  0263  2A64               	goto	i1l96
  1662  0264                     i1l96:
  1663  0264  0008               	return
  1664  0265                     __end_of_multiplexado:
  1665                           
  1666                           	psect	text11
  1667  0023                     __ptext11:	
  1668 ;; *************** function _codificar_7seg *****************
  1669 ;; Defined at:
  1670 ;;		line 41 in file "lab08_post_pgr.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  valor           1    wreg     unsigned char 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  valor           1    2[COMMON] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         0       0       0       0       0
  1685 ;;      Locals:         1       0       0       0       0
  1686 ;;      Temps:          2       0       0       0       0
  1687 ;;      Totals:         3       0       0       0       0
  1688 ;;Total ram usage:        3 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_multiplexado
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697  0023                     _codificar_7seg:	
  1698                           ;psect for function _codificar_7seg
  1699                           
  1700                           
  1701                           ;incstack = 0
  1702                           ; Regs used in _codificar_7seg: [wreg-fsr0h+status,2+status,0]
  1703                           ;codificar_7seg@valor stored from wreg
  1704  0023  00F2               	movwf	codificar_7seg@valor
  1705  0024                     i1l1028:
  1706                           
  1707                           ;lab08_post_pgr.c: 42:     if(selector == 4){
  1708  0024  3004               	movlw	4
  1709  0025  067D               	xorwf	_selector,w
  1710  0026  1D03               	btfss	3,2
  1711  0027  2829               	goto	u23_21
  1712  0028  282A               	goto	u23_20
  1713  0029                     u23_21:
  1714  0029  28C0               	goto	i1l1082
  1715  002A                     u23_20:
  1716  002A  2862               	goto	i1l1056
  1717  002B                     i1l1032:
  1718                           
  1719                           ;lab08_post_pgr.c: 45:                 PORTD = 0b10111111;
  1720  002B  30BF               	movlw	191
  1721  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1722  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1723  002E  0088               	movwf	8	;volatile
  1724                           
  1725                           ;lab08_post_pgr.c: 46:                 break;
  1726  002F  28E8               	goto	i1l83
  1727  0030                     i1l1034:
  1728                           
  1729                           ;lab08_post_pgr.c: 48:                 PORTD = 0b10000110;
  1730  0030  3086               	movlw	134
  1731  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0033  0088               	movwf	8	;volatile
  1734                           
  1735                           ;lab08_post_pgr.c: 49:                 break;
  1736  0034  28E8               	goto	i1l83
  1737  0035                     i1l1036:
  1738                           
  1739                           ;lab08_post_pgr.c: 51:                 PORTD = 0b11011011;
  1740  0035  30DB               	movlw	219
  1741  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0038  0088               	movwf	8	;volatile
  1744                           
  1745                           ;lab08_post_pgr.c: 52:                 break;
  1746  0039  28E8               	goto	i1l83
  1747  003A                     i1l1038:
  1748                           
  1749                           ;lab08_post_pgr.c: 54:                 PORTD = 0b11001111;
  1750  003A  30CF               	movlw	207
  1751  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1752  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1753  003D  0088               	movwf	8	;volatile
  1754                           
  1755                           ;lab08_post_pgr.c: 55:                 break;
  1756  003E  28E8               	goto	i1l83
  1757  003F                     i1l1040:
  1758                           
  1759                           ;lab08_post_pgr.c: 57:                 PORTD = 0b11100110;
  1760  003F  30E6               	movlw	230
  1761  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0042  0088               	movwf	8	;volatile
  1764                           
  1765                           ;lab08_post_pgr.c: 58:                 break;
  1766  0043  28E8               	goto	i1l83
  1767  0044                     i1l1042:
  1768                           
  1769                           ;lab08_post_pgr.c: 60:                 PORTD = 0b11101101;
  1770  0044  30ED               	movlw	237
  1771  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0047  0088               	movwf	8	;volatile
  1774                           
  1775                           ;lab08_post_pgr.c: 61:                 break;
  1776  0048  28E8               	goto	i1l83
  1777  0049                     i1l1044:
  1778                           
  1779                           ;lab08_post_pgr.c: 63:                 PORTD = 0b11111101;
  1780  0049  30FD               	movlw	253
  1781  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1782  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1783  004C  0088               	movwf	8	;volatile
  1784                           
  1785                           ;lab08_post_pgr.c: 64:                 break;
  1786  004D  28E8               	goto	i1l83
  1787  004E                     i1l1046:
  1788                           
  1789                           ;lab08_post_pgr.c: 66:                 PORTD = 0b10000111;
  1790  004E  3087               	movlw	135
  1791  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0051  0088               	movwf	8	;volatile
  1794                           
  1795                           ;lab08_post_pgr.c: 67:                 break;
  1796  0052  28E8               	goto	i1l83
  1797  0053                     i1l1048:
  1798                           
  1799                           ;lab08_post_pgr.c: 69:                 PORTD = 0b11111111;
  1800  0053  30FF               	movlw	255
  1801  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0056  0088               	movwf	8	;volatile
  1804                           
  1805                           ;lab08_post_pgr.c: 70:                 break;
  1806  0057  28E8               	goto	i1l83
  1807  0058                     i1l1050:
  1808                           
  1809                           ;lab08_post_pgr.c: 72:                 PORTD = 0b11101111;
  1810  0058  30EF               	movlw	239
  1811  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1812  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1813  005B  0088               	movwf	8	;volatile
  1814                           
  1815                           ;lab08_post_pgr.c: 73:                 break;
  1816  005C  28E8               	goto	i1l83
  1817  005D                     i1l1052:
  1818                           
  1819                           ;lab08_post_pgr.c: 75:                 PORTD = 0b10000000;
  1820  005D  3080               	movlw	128
  1821  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1822  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0060  0088               	movwf	8	;volatile
  1824                           
  1825                           ;lab08_post_pgr.c: 76:                 break;
  1826  0061  28E8               	goto	i1l83
  1827  0062                     i1l1056:
  1828  0062  0872               	movf	codificar_7seg@valor,w
  1829  0063  00F0               	movwf	??_codificar_7seg
  1830  0064  01F1               	clrf	??_codificar_7seg+1
  1831                           
  1832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 1, Range of values is 0 to 0
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            4     3 (average)
  1838                           ; direct_byte           11     8 (fixed)
  1839                           ; jumptable            260     6 (fixed)
  1840                           ;	Chosen strategy is simple_byte
  1841  0065  0871               	movf	??_codificar_7seg+1,w
  1842  0066  3A00               	xorlw	0	; case 0
  1843  0067  1903               	skipnz
  1844  0068  286A               	goto	i1l1332
  1845  0069  285D               	goto	i1l1052
  1846  006A                     i1l1332:
  1847                           
  1848                           ; Switch size 1, requested type "simple"
  1849                           ; Number of cases is 10, Range of values is 0 to 9
  1850                           ; switch strategies available:
  1851                           ; Name         Instructions Cycles
  1852                           ; simple_byte           31    16 (average)
  1853                           ; direct_byte           38     8 (fixed)
  1854                           ; jumptable            260     6 (fixed)
  1855                           ;	Chosen strategy is simple_byte
  1856  006A  0870               	movf	??_codificar_7seg,w
  1857  006B  3A00               	xorlw	0	; case 0
  1858  006C  1903               	skipnz
  1859  006D  282B               	goto	i1l1032
  1860  006E  3A01               	xorlw	1	; case 1
  1861  006F  1903               	skipnz
  1862  0070  2830               	goto	i1l1034
  1863  0071  3A03               	xorlw	3	; case 2
  1864  0072  1903               	skipnz
  1865  0073  2835               	goto	i1l1036
  1866  0074  3A01               	xorlw	1	; case 3
  1867  0075  1903               	skipnz
  1868  0076  283A               	goto	i1l1038
  1869  0077  3A07               	xorlw	7	; case 4
  1870  0078  1903               	skipnz
  1871  0079  283F               	goto	i1l1040
  1872  007A  3A01               	xorlw	1	; case 5
  1873  007B  1903               	skipnz
  1874  007C  2844               	goto	i1l1042
  1875  007D  3A03               	xorlw	3	; case 6
  1876  007E  1903               	skipnz
  1877  007F  2849               	goto	i1l1044
  1878  0080  3A01               	xorlw	1	; case 7
  1879  0081  1903               	skipnz
  1880  0082  284E               	goto	i1l1046
  1881  0083  3A0F               	xorlw	15	; case 8
  1882  0084  1903               	skipnz
  1883  0085  2853               	goto	i1l1048
  1884  0086  3A01               	xorlw	1	; case 9
  1885  0087  1903               	skipnz
  1886  0088  2858               	goto	i1l1050
  1887  0089  285D               	goto	i1l1052
  1888  008A                     i1l1058:
  1889                           
  1890                           ;lab08_post_pgr.c: 82:                 PORTD = 0b00111111;
  1891  008A  303F               	movlw	63
  1892  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1893  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1894  008D  0088               	movwf	8	;volatile
  1895                           
  1896                           ;lab08_post_pgr.c: 83:                 break;
  1897  008E  28E8               	goto	i1l83
  1898  008F                     i1l1060:
  1899                           
  1900                           ;lab08_post_pgr.c: 85:                 PORTD = 0b00000110;
  1901  008F  3006               	movlw	6
  1902  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0092  0088               	movwf	8	;volatile
  1905                           
  1906                           ;lab08_post_pgr.c: 86:                 break;
  1907  0093  28E8               	goto	i1l83
  1908  0094                     i1l1062:
  1909                           
  1910                           ;lab08_post_pgr.c: 88:                 PORTD = 0b01011011;
  1911  0094  305B               	movlw	91
  1912  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0097  0088               	movwf	8	;volatile
  1915                           
  1916                           ;lab08_post_pgr.c: 89:                 break;
  1917  0098  28E8               	goto	i1l83
  1918  0099                     i1l1064:
  1919                           
  1920                           ;lab08_post_pgr.c: 91:                 PORTD = 0b01001111;
  1921  0099  304F               	movlw	79
  1922  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1923  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1924  009C  0088               	movwf	8	;volatile
  1925                           
  1926                           ;lab08_post_pgr.c: 92:                 break;
  1927  009D  28E8               	goto	i1l83
  1928  009E                     i1l1066:
  1929                           
  1930                           ;lab08_post_pgr.c: 94:                 PORTD = 0b01100110;
  1931  009E  3066               	movlw	102
  1932  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1933  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1934  00A1  0088               	movwf	8	;volatile
  1935                           
  1936                           ;lab08_post_pgr.c: 95:                 break;
  1937  00A2  28E8               	goto	i1l83
  1938  00A3                     i1l1068:
  1939                           
  1940                           ;lab08_post_pgr.c: 97:                 PORTD = 0b01101101;
  1941  00A3  306D               	movlw	109
  1942  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1943  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1944  00A6  0088               	movwf	8	;volatile
  1945                           
  1946                           ;lab08_post_pgr.c: 98:                 break;
  1947  00A7  28E8               	goto	i1l83
  1948  00A8                     i1l1070:
  1949                           
  1950                           ;lab08_post_pgr.c: 100:                 PORTD = 0b01111101;
  1951  00A8  307D               	movlw	125
  1952  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1953  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1954  00AB  0088               	movwf	8	;volatile
  1955                           
  1956                           ;lab08_post_pgr.c: 101:                 break;
  1957  00AC  28E8               	goto	i1l83
  1958  00AD                     i1l1072:
  1959                           
  1960                           ;lab08_post_pgr.c: 103:                 PORTD = 0b00000111;
  1961  00AD  3007               	movlw	7
  1962  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1963  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1964  00B0  0088               	movwf	8	;volatile
  1965                           
  1966                           ;lab08_post_pgr.c: 104:                 break;
  1967  00B1  28E8               	goto	i1l83
  1968  00B2                     i1l1074:
  1969                           
  1970                           ;lab08_post_pgr.c: 106:                 PORTD = 0b01111111;
  1971  00B2  307F               	movlw	127
  1972  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1973  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1974  00B5  0088               	movwf	8	;volatile
  1975                           
  1976                           ;lab08_post_pgr.c: 107:                 break;
  1977  00B6  28E8               	goto	i1l83
  1978  00B7                     i1l1076:
  1979                           
  1980                           ;lab08_post_pgr.c: 109:                 PORTD = 0b01101111;
  1981  00B7  306F               	movlw	111
  1982  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1983  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1984  00BA  0088               	movwf	8	;volatile
  1985                           
  1986                           ;lab08_post_pgr.c: 110:                 break;
  1987  00BB  28E8               	goto	i1l83
  1988  00BC                     i1l1078:
  1989                           
  1990                           ;lab08_post_pgr.c: 112:                 PORTD = 0b00000000;
  1991  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1992  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1993  00BE  0188               	clrf	8	;volatile
  1994                           
  1995                           ;lab08_post_pgr.c: 113:                 break;
  1996  00BF  28E8               	goto	i1l83
  1997  00C0                     i1l1082:
  1998  00C0  0872               	movf	codificar_7seg@valor,w
  1999  00C1  00F0               	movwf	??_codificar_7seg
  2000  00C2  01F1               	clrf	??_codificar_7seg+1
  2001                           
  2002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2003                           ; Switch size 1, requested type "simple"
  2004                           ; Number of cases is 1, Range of values is 0 to 0
  2005                           ; switch strategies available:
  2006                           ; Name         Instructions Cycles
  2007                           ; simple_byte            4     3 (average)
  2008                           ; direct_byte           11     8 (fixed)
  2009                           ; jumptable            260     6 (fixed)
  2010                           ;	Chosen strategy is simple_byte
  2011  00C3  0871               	movf	??_codificar_7seg+1,w
  2012  00C4  3A00               	xorlw	0	; case 0
  2013  00C5  1903               	skipnz
  2014  00C6  28C8               	goto	i1l1334
  2015  00C7  28BC               	goto	i1l1078
  2016  00C8                     i1l1334:
  2017                           
  2018                           ; Switch size 1, requested type "simple"
  2019                           ; Number of cases is 10, Range of values is 0 to 9
  2020                           ; switch strategies available:
  2021                           ; Name         Instructions Cycles
  2022                           ; simple_byte           31    16 (average)
  2023                           ; direct_byte           38     8 (fixed)
  2024                           ; jumptable            260     6 (fixed)
  2025                           ;	Chosen strategy is simple_byte
  2026  00C8  0870               	movf	??_codificar_7seg,w
  2027  00C9  3A00               	xorlw	0	; case 0
  2028  00CA  1903               	skipnz
  2029  00CB  288A               	goto	i1l1058
  2030  00CC  3A01               	xorlw	1	; case 1
  2031  00CD  1903               	skipnz
  2032  00CE  288F               	goto	i1l1060
  2033  00CF  3A03               	xorlw	3	; case 2
  2034  00D0  1903               	skipnz
  2035  00D1  2894               	goto	i1l1062
  2036  00D2  3A01               	xorlw	1	; case 3
  2037  00D3  1903               	skipnz
  2038  00D4  2899               	goto	i1l1064
  2039  00D5  3A07               	xorlw	7	; case 4
  2040  00D6  1903               	skipnz
  2041  00D7  289E               	goto	i1l1066
  2042  00D8  3A01               	xorlw	1	; case 5
  2043  00D9  1903               	skipnz
  2044  00DA  28A3               	goto	i1l1068
  2045  00DB  3A03               	xorlw	3	; case 6
  2046  00DC  1903               	skipnz
  2047  00DD  28A8               	goto	i1l1070
  2048  00DE  3A01               	xorlw	1	; case 7
  2049  00DF  1903               	skipnz
  2050  00E0  28AD               	goto	i1l1072
  2051  00E1  3A0F               	xorlw	15	; case 8
  2052  00E2  1903               	skipnz
  2053  00E3  28B2               	goto	i1l1074
  2054  00E4  3A01               	xorlw	1	; case 9
  2055  00E5  1903               	skipnz
  2056  00E6  28B7               	goto	i1l1076
  2057  00E7  28BC               	goto	i1l1078
  2058  00E8                     i1l83:
  2059  00E8  0008               	return
  2060  00E9                     __end_of_codificar_7seg:
  2061  007E                     btemp	set	126	;btemp
  2062  007E                     wtemp0	set	126
  2063                           
  2064                           	psect	idloc
  2065                           
  2066                           ;Config register IDLOC0 @ 0x2000
  2067                           ;	unspecified, using default values
  2068  2000                     	org	8192
  2069  2000  3FFF               	dw	16383
  2070                           
  2071                           ;Config register IDLOC1 @ 0x2001
  2072                           ;	unspecified, using default values
  2073  2001                     	org	8193
  2074  2001  3FFF               	dw	16383
  2075                           
  2076                           ;Config register IDLOC2 @ 0x2002
  2077                           ;	unspecified, using default values
  2078  2002                     	org	8194
  2079  2002  3FFF               	dw	16383
  2080                           
  2081                           ;Config register IDLOC3 @ 0x2003
  2082                           ;	unspecified, using default values
  2083  2003                     	org	8195
  2084  2003  3FFF               	dw	16383
  2085                           
  2086                           	psect	config
  2087                           
  2088                           ;Config register CONFIG1 @ 0x2007
  2089                           ;	Oscillator Selection bits
  2090                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2091                           ;	Watchdog Timer Enable bit
  2092                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2093                           ;	Power-up Timer Enable bit
  2094                           ;	PWRTE = OFF, PWRT disabled
  2095                           ;	RE3/MCLR pin function select bit
  2096                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2097                           ;	Code Protection bit
  2098                           ;	CP = OFF, Program memory code protection is disabled
  2099                           ;	Data Code Protection bit
  2100                           ;	CPD = OFF, Data memory code protection is disabled
  2101                           ;	Brown Out Reset Selection bits
  2102                           ;	BOREN = OFF, BOR disabled
  2103                           ;	Internal External Switchover bit
  2104                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2105                           ;	Fail-Safe Clock Monitor Enabled bit
  2106                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2107                           ;	Low Voltage Programming Enable bit
  2108                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2109                           ;	In-Circuit Debugger Mode bit
  2110                           ;	DEBUG = 0x1, unprogrammed default
  2111  2007                     	org	8199
  2112  2007  20D4               	dw	8404
  2113                           
  2114                           ;Config register CONFIG2 @ 0x2008
  2115                           ;	Brown-out Reset Selection bit
  2116                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2117                           ;	Flash Program Memory Self Write Enable bits
  2118                           ;	WRT = OFF, Write protection off
  2119  2008                     	org	8200
  2120  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     16      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    separar@vector	PTR int  size(1) Largest target is 6
		 -> vector(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_separar
    _separar->___awdiv
    ___awdiv->___wmul
    _multiplexado->_codificar_7seg

Critical Paths under _main in BANK0

    _main->_setup_adc

Critical Paths under _isr in BANK0

    _isr->_separar
    _separar->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                             15 BANK0      1     1      0
                                _clk
                              _setup
                          _setup_adc
                          _setup_int
                             _timer0
 ---------------------------------------------------------------------------------
 (1) _timer0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_int                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_adc                                            1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clk                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  7     7      0    3030
                                              7 BANK0      7     7      0
                            ___awdiv
                             ___wmul
                       _multiplexado
                            _separar
 ---------------------------------------------------------------------------------
 (3) _separar                                              5     2      3    1658
                                             11 COMMON     2     2      0
                                              4 BANK0      3     0      3
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     756
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _multiplexado                                         2     2      0      44
                                              3 COMMON     2     2      0
                     _codificar_7seg
 ---------------------------------------------------------------------------------
 (4) _codificar_7seg                                       3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clk
   _setup
   _setup_adc
   _setup_int
   _timer0

 _isr (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _multiplexado
     _codificar_7seg
   _separar
     ___awdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 19 21:21:03 2022

                     l99 02F0             ___awdiv@sign 0021      ___wmul@multiplicand 0072  
                    l111 02DD                      l105 02FD                      l114 0308  
                    l108 0310                      u430 0285                      u431 0284  
                    u440 028E                      u441 028D                      u457 0299  
                    u467 02DA                      _cod 0032                      _clk 0309  
                    _isr 01C1                      fsr0 0004                      indf 0000  
                   l1210 030F                     l1202 02F1                     l1220 02D6  
                   l1204 02F9                     l1214 02C8                     l1208 0309  
                   l1216 02CD                     l1224 02FE                     l1218 02D5  
                   l1180 02E2                     l1260 0285                     l1252 0265  
                   l1182 02E3                     l1262 028E                     l1254 0279  
                   l1264 0293                     l1256 027E                     l1178 02DE  
                   l1266 0295                     l1258 0281                     l1268 029C  
                   ?_clk 0070                     _ADIF 0066                     ?_isr 0070  
                   _T0IF 005A                     i1l83 00E8                     i1l86 022F  
                   i1l96 0264                     _TMR0 0001                     _main 0265  
                   btemp 007E                     start 0010                    ??_clk 002E  
                  ??_isr 0027                    ?_main 0070          __end_of___awdiv 01C1  
                  _ANSEL 0188          ___awdiv@divisor 0076                    i1l102 0157  
                  i1l123 0211                    i1l220 02AF                    i1l222 02C7  
                  i1l373 01C0          ___awdiv@counter 0020                    u30_20 017B  
                  u30_21 017A                    u23_20 002A                    u23_21 0029  
                  u31_25 017F                    u32_20 018D                    u24_20 02A9  
                  u40_20 01C5                    u32_21 018C                    u24_21 02A8  
                  u40_21 01C4                    u41_20 01CF                    u41_21 01CE  
                  u33_25 018E                    u25_25 02B0                    u34_20 019E  
                  u42_20 0206                    u34_21 019D                    u42_21 0205  
                  u34_25 019A                    u26_25 02B7                    u27_20 02C3  
                  u27_21 02C2                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u35_25 01A6  
                  u36_20 01B2                    u28_20 015F                    u36_21 01B1  
                  u28_21 015E                    u37_20 01B7                    u29_20 016A  
                  u37_21 01B6                    u29_21 0169                    u38_20 0222  
                  u38_21 0221                    u39_20 0227                    u39_21 0226  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _setup 02DE          __end_of_separar 0158  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0013             __end_of_main 02A3                   ??_main 002F  
                 _ADRESH 001E         ___awdiv@dividend 0078                   ?_setup 0070  
                 _ANSELH 0189                   i1l1100 02BD                   i1l1110 015F  
                 i1l1102 02C3                   i1l1040 003F                   i1l1032 002B  
                 i1l1120 0173                   i1l1112 0164                   i1l1050 0058  
                 i1l1042 0044                   i1l1034 0030                   i1l1130 0189  
                 i1l1122 0175                   i1l1114 0166                   i1l1106 0158  
                 i1l1060 008F                   i1l1052 005D                   i1l1044 0049  
                 i1l1036 0035                   i1l1028 0024                   i1l1140 01AC  
                 i1l1132 018D                   i1l1124 017B                   i1l1116 016A  
                 i1l1108 015B                   i1l1070 00A8                   i1l1062 0094  
                 i1l1046 004E                   i1l1038 003A                   i1l1150 021C  
                 i1l1134 019E                   i1l1126 017E                   i1l1142 01B2  
                 i1l1118 016F                   i1l1230 01C5                   i1l1072 00AD  
                 i1l1064 0099                   i1l1048 0053                   i1l1056 0062  
                 i1l1160 023A                   i1l1152 0222                   i1l1144 01B7  
                 i1l1136 01A4                   i1l1128 0185                   i1l1232 01C6  
                 i1l1240 0202                   i1l1074 00B2                   i1l1066 009E  
                 i1l1058 008A                   i1l1082 00C0                   i1l1330 0259  
                 i1l1162 023F                   i1l1154 0227                   i1l1146 01BC  
                 i1l1138 01A5                   i1l1242 0206                   i1l1234 01CF  
                 i1l1226 01C1                   i1l1076 00B7                   i1l1068 00A3  
                 i1l1332 006A                   i1l1172 0251                   i1l1156 022C  
                 i1l1092 02A3                   i1l1244 020A                   i1l1236 01D2  
                 i1l1228 01C1                   i1l1334 00C8                   i1l1078 00BC  
                 i1l1166 0248                   i1l1158 0232                   i1l1094 02A5  
                 i1l1190 00EF                   i1l1246 020B                   i1l1238 01F5  
                 i1l1096 02A9                   i1l1192 0107                   i1l1248 0210  
                 i1l1098 02B6                   i1l1194 011E                   i1l1186 00E9  
                 i1l1196 0136                   i1l1188 00E9                   i1l1198 014D  
                 ___wmul 02A3                ??___awdiv 007A         ___awdiv@quotient 0022  
                 _timer0 02F1                   _vector 0033                   saved_w 007E  
              ??_separar 007B  __end_of__initialization 001F           __pcstackCOMMON 0070  
          __end_of_setup 02F1           _OPTION_REGbits 0081                  ??_setup 002E  
             __pbssBANK0 0030               __pmaintext 0265                  ?___wmul 0070  
             __pintentry 0004                  ?_timer0 0070                  ___awdiv 0158  
            separar@temp 007B                  __ptext1 02F1                  __ptext2 02FE  
                __ptext3 02C8                  __ptext4 02DE                  __ptext5 0309  
                __ptext6 01C1                  __ptext7 00E9                  __ptext8 02A3  
                __ptext9 0158                  _separar 00E9     end_of_initialization 001F  
                isr@temp 002C        __end_of_setup_adc 02DE        __end_of_setup_int 0309  
          ?_multiplexado 0070           _codificar_7seg 0023           __end_of___wmul 02C8  
         ??_multiplexado 0073           __end_of_timer0 02FE      start_initialization 0013  
            __end_of_clk 0311              __end_of_isr 021C   __end_of_codificar_7seg 00E9  
               ??___wmul 0074                 ??_timer0 002E              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0020            separar@vector 0026  
        ?_codificar_7seg 0070                 ?___awdiv 0076                 ?_separar 0024  
      interrupt_function 0004           ___wmul@product 0074                 _PIE1bits 008C  
   __end_of_multiplexado 0265                 _PIR1bits 000C                _setup_adc 02C8  
              _setup_int 02FE               _ADCON0bits 001F               _ADCON1bits 009F  
      ___wmul@multiplier 0070               ?_setup_adc 0070               ?_setup_int 0070  
           separar@valor 0024                 __ptext10 021C                 __ptext11 0023  
               _contador 0030                 _selector 007D               _INTCONbits 000B  
               intlevel1 0000         ??_codificar_7seg 0070               _OSCCONbits 008F  
            ??_setup_adc 002E              ??_setup_int 002E             _multiplexado 021C  
    codificar_7seg@valor 0072  
